
services:
  postgres:
    image: postgres:16-alpine
    container_name: todo-postgres
    env_file:
      - .env.prod
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      target: production
    container_name: todo-backend-prod
    env_file:
      - .env.prod
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      target: production
      args:
        VITE_API_BASE_URL: ${VITE_API_BASE_URL}
        NODE_ENV: ${NODE_ENV}
    container_name: todo-frontend-prod
    ports:
      - "${VITE_PORT:-80}:80"
    env_file:
      - .env.prod
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres-data:
    name: todo-postgres-data